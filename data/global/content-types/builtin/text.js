//CHECKSUM:5faa6ab66f5e4ce14880590a345a1ac5a9a7ed7fc901f41604676229683686af
"use strict";

const base = require('./_base');

function render(data) {
  const events = [];

  if (data.typing) {
    events.push({
      type: 'typing',
      value: data.typing
    });
  }

  return [...events, {
    type: 'text',
    markdown: true,
    text: data.text
  }];
}

function renderMessenger(data) {
  return [{
    type: 'typing',
    value: data.typing
  }, {
    text: data.text
  }];
}

function renderElement(data, channel) {
  if (channel === 'web' || channel === 'api' || channel === 'telegram') {
    return render(data);
  } else if (channel === 'messenger') {
    return renderMessenger(data);
  }

  return []; // TODO
}

module.exports = {
  id: 'builtin_text',
  group: 'Built-in Messages',
  title: 'Text',
  jsonSchema: {
    description: 'A regular text message with optional typing indicators and alternates',
    type: 'object',
    required: ['text'],
    properties: {
      text: {
        type: 'string',
        title: 'Message'
      },
      variations: {
        type: 'array',
        title: 'Alternates (optional)',
        items: {
          type: 'string',
          default: ''
        }
      },
      ...base.typingIndicators
    }
  },
  uiSchema: {
    text: {
      'ui:field': 'i18n_field',
      $subtype: 'textarea'
    },
    variations: {
      'ui:options': {
        orderable: false
      }
    }
  },
  computePreviewText: formData => formData.text && 'Text: ' + formData.text,
  renderElement: renderElement
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRleHQuanMiXSwibmFtZXMiOlsiYmFzZSIsInJlcXVpcmUiLCJyZW5kZXIiLCJkYXRhIiwiZXZlbnRzIiwidHlwaW5nIiwicHVzaCIsInR5cGUiLCJ2YWx1ZSIsIm1hcmtkb3duIiwidGV4dCIsInJlbmRlck1lc3NlbmdlciIsInJlbmRlckVsZW1lbnQiLCJjaGFubmVsIiwibW9kdWxlIiwiZXhwb3J0cyIsImlkIiwiZ3JvdXAiLCJ0aXRsZSIsImpzb25TY2hlbWEiLCJkZXNjcmlwdGlvbiIsInJlcXVpcmVkIiwicHJvcGVydGllcyIsInZhcmlhdGlvbnMiLCJpdGVtcyIsImRlZmF1bHQiLCJ0eXBpbmdJbmRpY2F0b3JzIiwidWlTY2hlbWEiLCIkc3VidHlwZSIsIm9yZGVyYWJsZSIsImNvbXB1dGVQcmV2aWV3VGV4dCIsImZvcm1EYXRhIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBcEI7O0FBRUEsU0FBU0MsTUFBVCxDQUFnQkMsSUFBaEIsRUFBc0I7QUFDcEIsUUFBTUMsTUFBTSxHQUFHLEVBQWY7O0FBRUEsTUFBSUQsSUFBSSxDQUFDRSxNQUFULEVBQWlCO0FBQ2ZELElBQUFBLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZO0FBQ1ZDLE1BQUFBLElBQUksRUFBRSxRQURJO0FBRVZDLE1BQUFBLEtBQUssRUFBRUwsSUFBSSxDQUFDRTtBQUZGLEtBQVo7QUFJRDs7QUFFRCxTQUFPLENBQ0wsR0FBR0QsTUFERSxFQUVMO0FBQ0VHLElBQUFBLElBQUksRUFBRSxNQURSO0FBRUVFLElBQUFBLFFBQVEsRUFBRSxJQUZaO0FBR0VDLElBQUFBLElBQUksRUFBRVAsSUFBSSxDQUFDTztBQUhiLEdBRkssQ0FBUDtBQVFEOztBQUVELFNBQVNDLGVBQVQsQ0FBeUJSLElBQXpCLEVBQStCO0FBQzdCLFNBQU8sQ0FDTDtBQUNFSSxJQUFBQSxJQUFJLEVBQUUsUUFEUjtBQUVFQyxJQUFBQSxLQUFLLEVBQUVMLElBQUksQ0FBQ0U7QUFGZCxHQURLLEVBS0w7QUFDRUssSUFBQUEsSUFBSSxFQUFFUCxJQUFJLENBQUNPO0FBRGIsR0FMSyxDQUFQO0FBU0Q7O0FBRUQsU0FBU0UsYUFBVCxDQUF1QlQsSUFBdkIsRUFBNkJVLE9BQTdCLEVBQXNDO0FBQ3BDLE1BQUlBLE9BQU8sS0FBSyxLQUFaLElBQXFCQSxPQUFPLEtBQUssS0FBakMsSUFBMENBLE9BQU8sS0FBSyxVQUExRCxFQUFzRTtBQUNwRSxXQUFPWCxNQUFNLENBQUNDLElBQUQsQ0FBYjtBQUNELEdBRkQsTUFFTyxJQUFJVSxPQUFPLEtBQUssV0FBaEIsRUFBNkI7QUFDbEMsV0FBT0YsZUFBZSxDQUFDUixJQUFELENBQXRCO0FBQ0Q7O0FBRUQsU0FBTyxFQUFQLENBUG9DLENBTzFCO0FBQ1g7O0FBRURXLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNmQyxFQUFBQSxFQUFFLEVBQUUsY0FEVztBQUVmQyxFQUFBQSxLQUFLLEVBQUUsbUJBRlE7QUFHZkMsRUFBQUEsS0FBSyxFQUFFLE1BSFE7QUFLZkMsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZDLElBQUFBLFdBQVcsRUFBRSx1RUFESDtBQUVWYixJQUFBQSxJQUFJLEVBQUUsUUFGSTtBQUdWYyxJQUFBQSxRQUFRLEVBQUUsQ0FBQyxNQUFELENBSEE7QUFJVkMsSUFBQUEsVUFBVSxFQUFFO0FBQ1ZaLE1BQUFBLElBQUksRUFBRTtBQUNKSCxRQUFBQSxJQUFJLEVBQUUsUUFERjtBQUVKVyxRQUFBQSxLQUFLLEVBQUU7QUFGSCxPQURJO0FBS1ZLLE1BQUFBLFVBQVUsRUFBRTtBQUNWaEIsUUFBQUEsSUFBSSxFQUFFLE9BREk7QUFFVlcsUUFBQUEsS0FBSyxFQUFFLHVCQUZHO0FBR1ZNLFFBQUFBLEtBQUssRUFBRTtBQUNMakIsVUFBQUEsSUFBSSxFQUFFLFFBREQ7QUFFTGtCLFVBQUFBLE9BQU8sRUFBRTtBQUZKO0FBSEcsT0FMRjtBQWFWLFNBQUd6QixJQUFJLENBQUMwQjtBQWJFO0FBSkYsR0FMRztBQTBCZkMsRUFBQUEsUUFBUSxFQUFFO0FBQ1JqQixJQUFBQSxJQUFJLEVBQUU7QUFDSixrQkFBWSxZQURSO0FBRUprQixNQUFBQSxRQUFRLEVBQUU7QUFGTixLQURFO0FBS1JMLElBQUFBLFVBQVUsRUFBRTtBQUNWLG9CQUFjO0FBQ1pNLFFBQUFBLFNBQVMsRUFBRTtBQURDO0FBREo7QUFMSixHQTFCSztBQXFDZkMsRUFBQUEsa0JBQWtCLEVBQUVDLFFBQVEsSUFBSUEsUUFBUSxDQUFDckIsSUFBVCxJQUFpQixXQUFXcUIsUUFBUSxDQUFDckIsSUFyQ3REO0FBdUNmRSxFQUFBQSxhQUFhLEVBQUVBO0FBdkNBLENBQWpCIiwic291cmNlUm9vdCI6Ii92YXIvbGliL2plbmtpbnMvd29ya3NwYWNlL2J1aWxkLXdpbmRvd3MvbW9kdWxlcy9idWlsdGluL3NyYy9iYWNrZW5kIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmFzZSA9IHJlcXVpcmUoJy4vX2Jhc2UnKVxuXG5mdW5jdGlvbiByZW5kZXIoZGF0YSkge1xuICBjb25zdCBldmVudHMgPSBbXVxuXG4gIGlmIChkYXRhLnR5cGluZykge1xuICAgIGV2ZW50cy5wdXNoKHtcbiAgICAgIHR5cGU6ICd0eXBpbmcnLFxuICAgICAgdmFsdWU6IGRhdGEudHlwaW5nXG4gICAgfSlcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgLi4uZXZlbnRzLFxuICAgIHtcbiAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgIG1hcmtkb3duOiB0cnVlLFxuICAgICAgdGV4dDogZGF0YS50ZXh0XG4gICAgfVxuICBdXG59XG5cbmZ1bmN0aW9uIHJlbmRlck1lc3NlbmdlcihkYXRhKSB7XG4gIHJldHVybiBbXG4gICAge1xuICAgICAgdHlwZTogJ3R5cGluZycsXG4gICAgICB2YWx1ZTogZGF0YS50eXBpbmdcbiAgICB9LFxuICAgIHtcbiAgICAgIHRleHQ6IGRhdGEudGV4dFxuICAgIH1cbiAgXVxufVxuXG5mdW5jdGlvbiByZW5kZXJFbGVtZW50KGRhdGEsIGNoYW5uZWwpIHtcbiAgaWYgKGNoYW5uZWwgPT09ICd3ZWInIHx8IGNoYW5uZWwgPT09ICdhcGknIHx8IGNoYW5uZWwgPT09ICd0ZWxlZ3JhbScpIHtcbiAgICByZXR1cm4gcmVuZGVyKGRhdGEpXG4gIH0gZWxzZSBpZiAoY2hhbm5lbCA9PT0gJ21lc3NlbmdlcicpIHtcbiAgICByZXR1cm4gcmVuZGVyTWVzc2VuZ2VyKGRhdGEpXG4gIH1cblxuICByZXR1cm4gW10gLy8gVE9ET1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaWQ6ICdidWlsdGluX3RleHQnLFxuICBncm91cDogJ0J1aWx0LWluIE1lc3NhZ2VzJyxcbiAgdGl0bGU6ICdUZXh0JyxcblxuICBqc29uU2NoZW1hOiB7XG4gICAgZGVzY3JpcHRpb246ICdBIHJlZ3VsYXIgdGV4dCBtZXNzYWdlIHdpdGggb3B0aW9uYWwgdHlwaW5nIGluZGljYXRvcnMgYW5kIGFsdGVybmF0ZXMnLFxuICAgIHR5cGU6ICdvYmplY3QnLFxuICAgIHJlcXVpcmVkOiBbJ3RleHQnXSxcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB0ZXh0OiB7XG4gICAgICAgIHR5cGU6ICdzdHJpbmcnLFxuICAgICAgICB0aXRsZTogJ01lc3NhZ2UnXG4gICAgICB9LFxuICAgICAgdmFyaWF0aW9uczoge1xuICAgICAgICB0eXBlOiAnYXJyYXknLFxuICAgICAgICB0aXRsZTogJ0FsdGVybmF0ZXMgKG9wdGlvbmFsKScsXG4gICAgICAgIGl0ZW1zOiB7XG4gICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgZGVmYXVsdDogJydcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC4uLmJhc2UudHlwaW5nSW5kaWNhdG9yc1xuICAgIH1cbiAgfSxcblxuICB1aVNjaGVtYToge1xuICAgIHRleHQ6IHtcbiAgICAgICd1aTpmaWVsZCc6ICdpMThuX2ZpZWxkJyxcbiAgICAgICRzdWJ0eXBlOiAndGV4dGFyZWEnXG4gICAgfSxcbiAgICB2YXJpYXRpb25zOiB7XG4gICAgICAndWk6b3B0aW9ucyc6IHtcbiAgICAgICAgb3JkZXJhYmxlOiBmYWxzZVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgY29tcHV0ZVByZXZpZXdUZXh0OiBmb3JtRGF0YSA9PiBmb3JtRGF0YS50ZXh0ICYmICdUZXh0OiAnICsgZm9ybURhdGEudGV4dCxcblxuICByZW5kZXJFbGVtZW50OiByZW5kZXJFbGVtZW50XG59XG4iXX0=
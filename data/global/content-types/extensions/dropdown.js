//CHECKSUM:d94fa0813ad005056fd6b94ec1749973ed86f4a87a940a8b1d6c1a7f6eb5b0ee
"use strict";

const base = require('./_base');

function render(data) {
  const events = [];

  if (data.typing) {
    events.push({
      type: 'typing',
      value: data.typing
    });
  }

  return [...events, {
    type: 'custom',
    module: 'extensions',
    component: 'Dropdown',
    message: data.message,
    buttonText: data.buttonText,
    displayInKeyboard: data.displayInKeyboard,
    options: data.options,
    allowCreation: data.allowCreation,
    allowMultiple: data.allowMultiple,
    width: data.width
  }];
}

function renderElement(data, channel) {
  if (channel === 'web' || channel === 'api') {
    return render(data);
  }

  return [];
}

module.exports = {
  id: 'dropdown',
  group: 'Extensions',
  title: 'Dropdown',
  jsonSchema: {
    title: 'Displays a list of options to the user',
    type: 'object',
    required: ['message'],
    properties: {
      message: {
        type: 'string',
        title: 'Message'
      },
      buttonText: {
        type: 'string',
        title: 'The text to display on the button.',
        description: 'When left blank, the selected option is sent when the dropdown is closed',
        default: ''
      },
      options: {
        type: 'array',
        title: 'List of options',
        items: {
          type: 'object',
          required: ['label'],
          properties: {
            label: {
              description: 'The text displayed in the dropdown menu',
              type: 'string',
              title: 'Label'
            },
            value: {
              description: 'The value that the bot will receive (optional)',
              type: 'string',
              title: 'Value'
            }
          }
        }
      },
      width: {
        type: 'number',
        title: 'The width of the component (in pixels)',
        description: 'The default size displays the select and the button on one line. Change it to fit your needs',
        default: 200
      },
      displayInKeyboard: {
        type: 'boolean',
        title: 'Display as keyboard',
        description: 'It will be displayed right on top of the composer (like choices)',
        default: true
      },
      allowCreation: {
        type: 'boolean',
        title: 'Allow creation of new options'
      },
      allowMultiple: {
        type: 'boolean',
        title: 'Allow multiple choices'
      },
      ...base.typingIndicators
    }
  },
  uiSchema: {
    message: {
      'ui:field': 'i18n_field'
    },
    buttonText: {
      'ui:field': 'i18n_field'
    },
    options: {
      'ui:field': 'i18n_array'
    }
  },
  computePreviewText: formData => formData.message && 'Dropdown: ' + formData.message,
  renderElement
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRyb3Bkb3duLmpzIl0sIm5hbWVzIjpbImJhc2UiLCJyZXF1aXJlIiwicmVuZGVyIiwiZGF0YSIsImV2ZW50cyIsInR5cGluZyIsInB1c2giLCJ0eXBlIiwidmFsdWUiLCJtb2R1bGUiLCJjb21wb25lbnQiLCJtZXNzYWdlIiwiYnV0dG9uVGV4dCIsImRpc3BsYXlJbktleWJvYXJkIiwib3B0aW9ucyIsImFsbG93Q3JlYXRpb24iLCJhbGxvd011bHRpcGxlIiwid2lkdGgiLCJyZW5kZXJFbGVtZW50IiwiY2hhbm5lbCIsImV4cG9ydHMiLCJpZCIsImdyb3VwIiwidGl0bGUiLCJqc29uU2NoZW1hIiwicmVxdWlyZWQiLCJwcm9wZXJ0aWVzIiwiZGVzY3JpcHRpb24iLCJkZWZhdWx0IiwiaXRlbXMiLCJsYWJlbCIsInR5cGluZ0luZGljYXRvcnMiLCJ1aVNjaGVtYSIsImNvbXB1dGVQcmV2aWV3VGV4dCIsImZvcm1EYXRhIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBcEI7O0FBRUEsU0FBU0MsTUFBVCxDQUFnQkMsSUFBaEIsRUFBc0I7QUFDcEIsUUFBTUMsTUFBTSxHQUFHLEVBQWY7O0FBRUEsTUFBSUQsSUFBSSxDQUFDRSxNQUFULEVBQWlCO0FBQ2ZELElBQUFBLE1BQU0sQ0FBQ0UsSUFBUCxDQUFZO0FBQ1ZDLE1BQUFBLElBQUksRUFBRSxRQURJO0FBRVZDLE1BQUFBLEtBQUssRUFBRUwsSUFBSSxDQUFDRTtBQUZGLEtBQVo7QUFJRDs7QUFFRCxTQUFPLENBQ0wsR0FBR0QsTUFERSxFQUVMO0FBQ0VHLElBQUFBLElBQUksRUFBRSxRQURSO0FBRUVFLElBQUFBLE1BQU0sRUFBRSxZQUZWO0FBR0VDLElBQUFBLFNBQVMsRUFBRSxVQUhiO0FBSUVDLElBQUFBLE9BQU8sRUFBRVIsSUFBSSxDQUFDUSxPQUpoQjtBQUtFQyxJQUFBQSxVQUFVLEVBQUVULElBQUksQ0FBQ1MsVUFMbkI7QUFNRUMsSUFBQUEs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LEVBQUU7QUFBRSxrQkFBWTtBQUFkLEtBREQ7QUFFUkMsSUFBQUEsVUFBVSxFQUFFO0FBQUUsa0JBQVk7QUFBZCxLQUZKO0FBR1JFLElBQUFBLE9BQU8sRUFBRTtBQUFFLGtCQUFZO0FBQWQ7QUFIRCxHQS9ESztBQW9FZm1CLEVBQUFBLGtCQUFrQixFQUFFQyxRQUFRLElBQUlBLFFBQVEsQ0FBQ3ZCLE9BQVQsSUFBb0IsZUFBZXVCLFFBQVEsQ0FBQ3ZCLE9BcEU3RDtBQXFFZk8sRUFBQUE7QUFyRWUsQ0FBakIiLCJzb3VyY2VSb290IjoiL3Zhci9saWIvamVua2lucy93b3Jrc3BhY2UvYnVpbGQtd2luZG93cy9tb2R1bGVzL2V4dGVuc2lvbnMvc3JjL2JhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBiYXNlID0gcmVxdWlyZSgnLi9fYmFzZScpXG5cbmZ1bmN0aW9uIHJlbmRlcihkYXRhKSB7XG4gIGNvbnN0IGV2ZW50cyA9IFtdXG5cbiAgaWYgKGRhdGEudHlwaW5nKSB7XG4gICAgZXZlbnRzLnB1c2goe1xuICAgICAgdHlwZTogJ3R5cGluZycsXG4gICAgICB2YWx1ZTogZGF0YS50eXBpbmdcbiAgICB9KVxuICB9XG5cbiAgcmV0dXJuIFtcbiAgICAuLi5ldmVudHMsXG4gICAge1xuICAgICAgdHlwZTogJ2N1c3RvbScsXG4gICAgICBtb2R1bGU6ICdleHRlbnNpb25zJyxcbiAgICAgIGNvbXBvbmVudDogJ0Ryb3Bkb3duJyxcbiAgICAgIG1lc3NhZ2U6IGRhdGEubWVzc2FnZSxcbiAgICAgIGJ1dHRvblRleHQ6IGRhdGEuYnV0dG9uVGV4dCxcbiAgICAgIGRpc3BsYXlJbktleWJvYXJkOiBkYXRhLmRpc3BsYXlJbktleWJvYXJkLFxuICAgICAgb3B0aW9uczogZGF0YS5vcHRpb25zLFxuICAgICAgYWxsb3dDcmVhdGlvbjogZGF0YS5hbGxvd0NyZWF0aW9uLFxuICAgICAgYWxsb3dNdWx0aXBsZTogZGF0YS5hbGxvd011bHRpcGxlLFxuICAgICAgd2lkdGg6IGRhdGEud2lkdGhcbiAgICB9XG4gIF1cbn1cblxuZnVuY3Rpb24gcmVuZGVyRWxlbWVudChkYXRhLCBjaGFubmVsKSB7XG4gIGlmIChjaGFubmVsID09PSAnd2ViJyB8fCBjaGFubmVsID09PSAnYXBpJykge1xuICAgIHJldHVybiByZW5kZXIoZGF0YSlcbiAgfVxuXG4gIHJldHVybiBbXVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaWQ6ICdkcm9wZG93bicsXG4gIGdyb3VwOiAnRXh0ZW5zaW9ucycsXG4gIHRpdGxlOiAnRHJvcGRvd24nLFxuXG4gIGpzb25TY2hlbWE6IHtcbiAgICB0aXRsZTogJ0Rpc3BsYXlzIGEgbGlzdCBvZiBvcHRpb25zIHRvIHRoZSB1c2VyJyxcbiAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICByZXF1aXJlZDogWydtZXNzYWdlJ10sXG4gICAgcHJvcGVydGllczoge1xuICAgICAgbWVzc2FnZToge1xuICAgICAgICB0eXBlOiAnc3RyaW5nJyxcbiAgICAgICAgdGl0bGU6ICdNZXNzYWdlJ1xuICAgICAgfSxcbiAgICAgIGJ1dHRvblRleHQ6IHtcbiAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgIHRpdGxlOiAnVGhlIHRleHQgdG8gZGlzcGxheSBvbiB0aGUgYnV0dG9uLicsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnV2hlbiBsZWZ0IGJsYW5rLCB0aGUgc2VsZWN0ZWQgb3B0aW9uIGlzIHNlbnQgd2hlbiB0aGUgZHJvcGRvd24gaXMgY2xvc2VkJyxcbiAgICAgICAgZGVmYXVsdDogJydcbiAgICAgIH0sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIHR5cGU6ICdhcnJheScsXG4gICAgICAgIHRpdGxlOiAnTGlzdCBvZiBvcHRpb25zJyxcbiAgICAgICAgaXRlbXM6IHtcbiAgICAgICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgICAgICByZXF1aXJlZDogWydsYWJlbCddLFxuICAgICAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIHRleHQgZGlzcGxheWVkIGluIHRoZSBkcm9wZG93biBtZW51JyxcbiAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgICAgIHRpdGxlOiAnTGFiZWwnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgdmFsdWUgdGhhdCB0aGUgYm90IHdpbGwgcmVjZWl2ZSAob3B0aW9uYWwpJyxcbiAgICAgICAgICAgICAgdHlwZTogJ3N0cmluZycsXG4gICAgICAgICAgICAgIHRpdGxlOiAnVmFsdWUnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgd2lkdGg6IHtcbiAgICAgICAgdHlwZTogJ251bWJlcicsXG4gICAgICAgIHRpdGxlOiAnVGhlIHdpZHRoIG9mIHRoZSBjb21wb25lbnQgKGluIHBpeGVscyknLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ1RoZSBkZWZhdWx0IHNpemUgZGlzcGxheXMgdGhlIHNlbGVjdCBhbmQgdGhlIGJ1dHRvbiBvbiBvbmUgbGluZS4gQ2hhbmdlIGl0IHRvIGZpdCB5b3VyIG5lZWRzJyxcbiAgICAgICAgZGVmYXVsdDogMjAwXG4gICAgICB9LFxuICAgICAgZGlzcGxheUluS2V5Ym9hcmQ6IHtcbiAgICAgICAgdHlwZTogJ2Jvb2xlYW4nLFxuICAgICAgICB0aXRsZTogJ0Rpc3BsYXkgYXMga2V5Ym9hcmQnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0l0IHdpbGwgYmUgZGlzcGxheWVkIHJpZ2h0IG9uIHRvcCBvZiB0aGUgY29tcG9zZXIgKGxpa2UgY2hvaWNlcyknLFxuICAgICAgICBkZWZhdWx0OiB0cnVlXG4gICAgICB9LFxuICAgICAgYWxsb3dDcmVhdGlvbjoge1xuICAgICAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgICAgIHRpdGxlOiAnQWxsb3cgY3JlYXRpb24gb2YgbmV3IG9wdGlvbnMnXG4gICAgICB9LFxuICAgICAgYWxsb3dNdWx0aXBsZToge1xuICAgICAgICB0eXBlOiAnYm9vbGVhbicsXG4gICAgICAgIHRpdGxlOiAnQWxsb3cgbXVsdGlwbGUgY2hvaWNlcydcbiAgICAgIH0sXG4gICAgICAuLi5iYXNlLnR5cGluZ0luZGljYXRvcnNcbiAgICB9XG4gIH0sXG4gIHVpU2NoZW1hOiB7XG4gICAgbWVzc2FnZTogeyAndWk6ZmllbGQnOiAnaTE4bl9maWVsZCcgfSxcbiAgICBidXR0b25UZXh0OiB7ICd1aTpmaWVsZCc6ICdpMThuX2ZpZWxkJyB9LFxuICAgIG9wdGlvbnM6IHsgJ3VpOmZpZWxkJzogJ2kxOG5fYXJyYXknIH1cbiAgfSxcbiAgY29tcHV0ZVByZXZpZXdUZXh0OiBmb3JtRGF0YSA9PiBmb3JtRGF0YS5tZXNzYWdlICYmICdEcm9wZG93bjogJyArIGZvcm1EYXRhLm1lc3NhZ2UsXG4gIHJlbmRlckVsZW1lbnRcbn1cbiJdfQ==
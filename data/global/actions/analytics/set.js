//CHECKSUM:9b05304e2c7da9ea833072dc649f2dd3cacbbe441826051a26fcd2a9711ac6d8
"use strict";

const axios = require('axios');
/**
 * Sets the absolute value of a specific metric group.
 *
 * @title Set Custom Metric
 * @category Analytics
 * @param {string} metric The name of the metric
 * @param {string} [group=all] Optional group inside the metrics
 * @param {Number} [count=1] The absolute value to set
 */


const set = async (metric, group, count = 1) => {
  const axiosConfig = await bp.http.getAxiosConfigForBot(event.botId);
  await axios.post('/mod/analytics/custom_metrics/set', {
    name: `${metric}~${group}`,
    count: Number(count)
  }, axiosConfig);
};

return set(args.metric, args.group, args.count);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldC5qcyJdLCJuYW1lcyI6WyJheGlvcyIsInJlcXVpcmUiLCJzZXQiLCJtZXRyaWMiLCJncm91cCIsImNvdW50IiwiYXhpb3NDb25maWciLCJicCIsImh0dHAiLCJnZXRBeGlvc0NvbmZpZ0ZvckJvdCIsImV2ZW50IiwiYm90SWQiLCJwb3N0IiwibmFtZSIsIk51bWJlciIsImFyZ3MiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjtBQUVBOzs7Ozs7Ozs7OztBQVNBLE1BQU1DLEdBQUcsR0FBRyxPQUFPQyxNQUFQLEVBQWVDLEtBQWYsRUFBc0JDLEtBQUssR0FBRyxDQUE5QixLQUFvQztBQUM5QyxRQUFNQyxXQUFXLEdBQUcsTUFBTUMsRUFBRSxDQUFDQyxJQUFILENBQVFDLG9CQUFSLENBQTZCQyxLQUFLLENBQUNDLEtBQW5DLENBQTFCO0FBQ0EsUUFBTVgsS0FBSyxDQUFDWSxJQUFOLENBQ0osbUNBREksRUFFSjtBQUFFQyxJQUFBQSxJQUFJLEVBQUcsR0FBRVYsTUFBTyxJQUFHQyxLQUFNLEVBQTNCO0FBQThCQyxJQUFBQSxLQUFLLEVBQUVTLE1BQU0sQ0FBQ1QsS0FBRDtBQUEzQyxHQUZJLEVBR0pDLFdBSEksQ0FBTjtBQUtELENBUEQ7O0FBU0EsT0FBT0osR0FBRyxDQUFDYSxJQUFJLENBQUNaLE1BQU4sRUFBY1ksSUFBSSxDQUFDWCxLQUFuQixFQUEwQlcsSUFBSSxDQUFDVixLQUEvQixDQUFWIiwic291cmNlUm9vdCI6Ii92YXIvbGliL2plbmtpbnMvd29ya3NwYWNlL2J1aWxkLXdpbmRvd3MvbW9kdWxlcy9hbmFseXRpY3Mvc3JjL2JhY2tlbmQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBheGlvcyA9IHJlcXVpcmUoJ2F4aW9zJylcblxuLyoqXG4gKiBTZXRzIHRoZSBhYnNvbHV0ZSB2YWx1ZSBvZiBhIHNwZWNpZmljIG1ldHJpYyBncm91cC5cbiAqXG4gKiBAdGl0bGUgU2V0IEN1c3RvbSBNZXRyaWNcbiAqIEBjYXRlZ29yeSBBbmFseXRpY3NcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXRyaWMgVGhlIG5hbWUgb2YgdGhlIG1ldHJpY1xuICogQHBhcmFtIHtzdHJpbmd9IFtncm91cD1hbGxdIE9wdGlvbmFsIGdyb3VwIGluc2lkZSB0aGUgbWV0cmljc1xuICogQHBhcmFtIHtOdW1iZXJ9IFtjb3VudD0xXSBUaGUgYWJzb2x1dGUgdmFsdWUgdG8gc2V0XG4gKi9cbmNvbnN0IHNldCA9IGFzeW5jIChtZXRyaWMsIGdyb3VwLCBjb3VudCA9IDEpID0+IHtcbiAgY29uc3QgYXhpb3NDb25maWcgPSBhd2FpdCBicC5odHRwLmdldEF4aW9zQ29uZmlnRm9yQm90KGV2ZW50LmJvdElkKVxuICBhd2FpdCBheGlvcy5wb3N0KFxuICAgICcvbW9kL2FuYWx5dGljcy9jdXN0b21fbWV0cmljcy9zZXQnLFxuICAgIHsgbmFtZTogYCR7bWV0cmljfX4ke2dyb3VwfWAsIGNvdW50OiBOdW1iZXIoY291bnQpIH0sXG4gICAgYXhpb3NDb25maWdcbiAgKVxufVxuXG5yZXR1cm4gc2V0KGFyZ3MubWV0cmljLCBhcmdzLmdyb3VwLCBhcmdzLmNvdW50KVxuIl19